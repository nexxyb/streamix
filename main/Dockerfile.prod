# BUILDER #
###########

# pull official base image
FROM python:3.9.6-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        gcc \
        curl \
        python3-dev \
        libpq-dev \
        libopenblas-dev \
        ffmpeg \
        liblapack-dev \
        netcat \
        freetype2-doc

# install rust compiler
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# install dependencies
COPY ./requirements.prod.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.prod.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.9.6-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential gcc curl python3-dev libpq-dev libopenblas-dev ffmpeg \
        liblapack-dev netcat freetype2-doc \
    && rm -rf /var/lib/apt/lists/* 

# install rust compiler (option 1: repeat the same commands as in builder stage)
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.prod.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME


# chown all the files to the app user
RUN chown -R app:app $HOME
# RUN chmod -R 777 $HOME
RUN chmod -R 777 /usr/local/lib/python3.9/site-packages/llama_index/

# change to the app user
USER app
# run entrypoint.prod.sh

ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
